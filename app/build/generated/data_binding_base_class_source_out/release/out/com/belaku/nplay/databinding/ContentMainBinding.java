// Generated by view binder compiler. Do not edit!
package com.belaku.nplay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.belaku.nplay.R;
import com.google.android.ads.nativetemplates.TemplateView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.masoudss.lib.WaveformSeekBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText edtxSearchQuery;

  @NonNull
  public final FloatingActionButton fabFavorite;

  @NonNull
  public final FloatingActionButton fabPlayAll;

  @NonNull
  public final ImageButton imgbtnPlayAlbum;

  @NonNull
  public final LinearLayout llDynamic;

  @NonNull
  public final TemplateView nativeTemplateView;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final RecyclerView rv;

  @NonNull
  public final HorizontalScrollView ssDynamic;

  @NonNull
  public final TextView txCurrentTime;

  @NonNull
  public final TextView txFeaturing;

  @NonNull
  public final TextView txSname;

  @NonNull
  public final WaveformSeekBar wfsb;

  private ContentMainBinding(@NonNull RelativeLayout rootView, @NonNull EditText edtxSearchQuery,
      @NonNull FloatingActionButton fabFavorite, @NonNull FloatingActionButton fabPlayAll,
      @NonNull ImageButton imgbtnPlayAlbum, @NonNull LinearLayout llDynamic,
      @NonNull TemplateView nativeTemplateView, @NonNull RelativeLayout rlMain,
      @NonNull RecyclerView rv, @NonNull HorizontalScrollView ssDynamic,
      @NonNull TextView txCurrentTime, @NonNull TextView txFeaturing, @NonNull TextView txSname,
      @NonNull WaveformSeekBar wfsb) {
    this.rootView = rootView;
    this.edtxSearchQuery = edtxSearchQuery;
    this.fabFavorite = fabFavorite;
    this.fabPlayAll = fabPlayAll;
    this.imgbtnPlayAlbum = imgbtnPlayAlbum;
    this.llDynamic = llDynamic;
    this.nativeTemplateView = nativeTemplateView;
    this.rlMain = rlMain;
    this.rv = rv;
    this.ssDynamic = ssDynamic;
    this.txCurrentTime = txCurrentTime;
    this.txFeaturing = txFeaturing;
    this.txSname = txSname;
    this.wfsb = wfsb;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtx_search_query;
      EditText edtxSearchQuery = ViewBindings.findChildViewById(rootView, id);
      if (edtxSearchQuery == null) {
        break missingId;
      }

      id = R.id.fab_favorite;
      FloatingActionButton fabFavorite = ViewBindings.findChildViewById(rootView, id);
      if (fabFavorite == null) {
        break missingId;
      }

      id = R.id.fab_play_all;
      FloatingActionButton fabPlayAll = ViewBindings.findChildViewById(rootView, id);
      if (fabPlayAll == null) {
        break missingId;
      }

      id = R.id.imgbtn_PlayAlbum;
      ImageButton imgbtnPlayAlbum = ViewBindings.findChildViewById(rootView, id);
      if (imgbtnPlayAlbum == null) {
        break missingId;
      }

      id = R.id.ll_dynamic;
      LinearLayout llDynamic = ViewBindings.findChildViewById(rootView, id);
      if (llDynamic == null) {
        break missingId;
      }

      id = R.id.nativeTemplateView;
      TemplateView nativeTemplateView = ViewBindings.findChildViewById(rootView, id);
      if (nativeTemplateView == null) {
        break missingId;
      }

      RelativeLayout rlMain = (RelativeLayout) rootView;

      id = R.id.rv;
      RecyclerView rv = ViewBindings.findChildViewById(rootView, id);
      if (rv == null) {
        break missingId;
      }

      id = R.id.ss_dynamic;
      HorizontalScrollView ssDynamic = ViewBindings.findChildViewById(rootView, id);
      if (ssDynamic == null) {
        break missingId;
      }

      id = R.id.tx_current_time;
      TextView txCurrentTime = ViewBindings.findChildViewById(rootView, id);
      if (txCurrentTime == null) {
        break missingId;
      }

      id = R.id.tx_featuring;
      TextView txFeaturing = ViewBindings.findChildViewById(rootView, id);
      if (txFeaturing == null) {
        break missingId;
      }

      id = R.id.tx_sname;
      TextView txSname = ViewBindings.findChildViewById(rootView, id);
      if (txSname == null) {
        break missingId;
      }

      id = R.id.wfsb;
      WaveformSeekBar wfsb = ViewBindings.findChildViewById(rootView, id);
      if (wfsb == null) {
        break missingId;
      }

      return new ContentMainBinding((RelativeLayout) rootView, edtxSearchQuery, fabFavorite,
          fabPlayAll, imgbtnPlayAlbum, llDynamic, nativeTemplateView, rlMain, rv, ssDynamic,
          txCurrentTime, txFeaturing, txSname, wfsb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
