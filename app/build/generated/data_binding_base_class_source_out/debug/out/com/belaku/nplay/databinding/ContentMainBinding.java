// Generated by view binder compiler. Do not edit!
package com.belaku.nplay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.belaku.nplay.R;
import com.masoudss.lib.WaveformSeekBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText edtxSearchQuery;

  @NonNull
  public final ImageButton imgbtnFav;

  @NonNull
  public final LinearLayout llDynamic;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final RecyclerView rv;

  @NonNull
  public final SeekBar seek;

  @NonNull
  public final HorizontalScrollView ssDynamic;

  @NonNull
  public final TextView txCurrentTime;

  @NonNull
  public final TextView txDuration;

  @NonNull
  public final WaveformSeekBar wfsb;

  private ContentMainBinding(@NonNull RelativeLayout rootView, @NonNull EditText edtxSearchQuery,
      @NonNull ImageButton imgbtnFav, @NonNull LinearLayout llDynamic,
      @NonNull RelativeLayout rlMain, @NonNull RecyclerView rv, @NonNull SeekBar seek,
      @NonNull HorizontalScrollView ssDynamic, @NonNull TextView txCurrentTime,
      @NonNull TextView txDuration, @NonNull WaveformSeekBar wfsb) {
    this.rootView = rootView;
    this.edtxSearchQuery = edtxSearchQuery;
    this.imgbtnFav = imgbtnFav;
    this.llDynamic = llDynamic;
    this.rlMain = rlMain;
    this.rv = rv;
    this.seek = seek;
    this.ssDynamic = ssDynamic;
    this.txCurrentTime = txCurrentTime;
    this.txDuration = txDuration;
    this.wfsb = wfsb;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtx_search_query;
      EditText edtxSearchQuery = ViewBindings.findChildViewById(rootView, id);
      if (edtxSearchQuery == null) {
        break missingId;
      }

      id = R.id.imgbtn_fav;
      ImageButton imgbtnFav = ViewBindings.findChildViewById(rootView, id);
      if (imgbtnFav == null) {
        break missingId;
      }

      id = R.id.ll_dynamic;
      LinearLayout llDynamic = ViewBindings.findChildViewById(rootView, id);
      if (llDynamic == null) {
        break missingId;
      }

      RelativeLayout rlMain = (RelativeLayout) rootView;

      id = R.id.rv;
      RecyclerView rv = ViewBindings.findChildViewById(rootView, id);
      if (rv == null) {
        break missingId;
      }

      id = R.id.seek;
      SeekBar seek = ViewBindings.findChildViewById(rootView, id);
      if (seek == null) {
        break missingId;
      }

      id = R.id.ss_dynamic;
      HorizontalScrollView ssDynamic = ViewBindings.findChildViewById(rootView, id);
      if (ssDynamic == null) {
        break missingId;
      }

      id = R.id.tx_current_time;
      TextView txCurrentTime = ViewBindings.findChildViewById(rootView, id);
      if (txCurrentTime == null) {
        break missingId;
      }

      id = R.id.tx_duration;
      TextView txDuration = ViewBindings.findChildViewById(rootView, id);
      if (txDuration == null) {
        break missingId;
      }

      id = R.id.wfsb;
      WaveformSeekBar wfsb = ViewBindings.findChildViewById(rootView, id);
      if (wfsb == null) {
        break missingId;
      }

      return new ContentMainBinding((RelativeLayout) rootView, edtxSearchQuery, imgbtnFav,
          llDynamic, rlMain, rv, seek, ssDynamic, txCurrentTime, txDuration, wfsb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
